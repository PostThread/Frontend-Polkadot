scalar BigInt

scalar Cursor

scalar Datetime

scalar Time

scalar UUID

enum OrderByDirection {
  AscNullsFirst
  AscNullsLast
  DescNullsFirst
  DescNullsLast
}

"Boolean expression comparing fields on type \"BigInt\""
input BigIntFilter {
  eq: BigInt
  gt: BigInt
  gte: BigInt
  lt: BigInt
  lte: BigInt
  neq: BigInt
}

"Boolean expression comparing fields on type \"Boolean\""
input BooleanFilter {
  eq: Boolean
  gt: Boolean
  gte: Boolean
  lt: Boolean
  lte: Boolean
  neq: Boolean
}

"Boolean expression comparing fields on type \"Date\""
input DateFilter {
  eq: Date
  gt: Date
  gte: Date
  lt: Date
  lte: Date
  neq: Date
}

"Boolean expression comparing fields on type \"Datetime\""
input DatetimeFilter {
  eq: Datetime
  gt: Datetime
  gte: Datetime
  lt: Datetime
  lte: Datetime
  neq: Datetime
}

"Boolean expression comparing fields on type \"Float\""
input FloatFilter {
  eq: Float
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  neq: Float
}

"Boolean expression comparing fields on type \"Int\""
input IntFilter {
  eq: Int
  gt: Int
  gte: Int
  lt: Int
  lte: Int
  neq: Int
}

"Boolean expression comparing fields on type \"JSON\""
input JSONFilter {
  eq: JSON
  neq: JSON
}

"Boolean expression comparing fields on type \"String\""
input StringFilter {
  eq: String
  gt: String
  gte: String
  lt: String
  lte: String
  neq: String
}

"Boolean expression comparing fields on type \"Time\""
input TimeFilter {
  eq: Time
  gt: Time
  gte: Time
  lt: Time
  lte: Time
  neq: Time
}

"Boolean expression comparing fields on type \"UUID\""
input UUIDFilter {
  eq: UUID
  neq: UUID
}

input categoriesFilter {
  id: BigIntFilter
  created_at: DatetimeFilter
  name: StringFilter
}

input categoriesInsertInput {
  created_at: Datetime
  name: String
}

input categoriesOrderBy {
  id: OrderByDirection
  created_at: OrderByDirection
  name: OrderByDirection
}

input categoriesUpdateInput {
  created_at: Datetime
  name: String
}

input commentsFilter {
  id: BigIntFilter
  created_at: DatetimeFilter
  post_id: BigIntFilter
  user_id: BigIntFilter
  body: StringFilter
  reddit_upvotes: BigIntFilter
  reddit_downvotes: BigIntFilter
  postthread_upvotes: BigIntFilter
  postthread_downvotes: BigIntFilter
  reddit_id: StringFilter
  depth: BigIntFilter
}

input commentsInsertInput {
  created_at: Datetime
  post_id: BigInt
  user_id: BigInt
  body: String
  reddit_upvotes: BigInt
  reddit_downvotes: BigInt
  postthread_upvotes: BigInt
  postthread_downvotes: BigInt
  reddit_id: String
  depth: BigInt
}

input commentsOrderBy {
  id: OrderByDirection
  created_at: OrderByDirection
  post_id: OrderByDirection
  user_id: OrderByDirection
  body: OrderByDirection
  reddit_upvotes: OrderByDirection
  reddit_downvotes: OrderByDirection
  postthread_upvotes: OrderByDirection
  postthread_downvotes: OrderByDirection
  reddit_id: OrderByDirection
  depth: OrderByDirection
}

input commentsUpdateInput {
  created_at: Datetime
  post_id: BigInt
  user_id: BigInt
  body: String
  reddit_upvotes: BigInt
  reddit_downvotes: BigInt
  postthread_upvotes: BigInt
  postthread_downvotes: BigInt
  reddit_id: String
  depth: BigInt
}

input postsFilter {
  id: BigIntFilter
  created_at: DatetimeFilter
  title: StringFilter
  body: StringFilter
  url: StringFilter
  user_id: BigIntFilter
  category_id: BigIntFilter
  reddit_id: StringFilter
  reddit_upvotes: BigIntFilter
  reddit_downvotes: BigIntFilter
  postthread_upvotes: BigIntFilter
  postthread_downvotes: BigIntFilter
  is_nsfw: BooleanFilter
  profile_pic: StringFilter
}

input postsInsertInput {
  created_at: Datetime
  title: String
  body: String
  url: String
  user_id: BigInt
  category_id: BigInt
  reddit_id: String
  reddit_upvotes: BigInt
  reddit_downvotes: BigInt
  postthread_upvotes: BigInt
  postthread_downvotes: BigInt
  is_nsfw: Boolean
  profile_pic: String
}

input postsOrderBy {
  id: OrderByDirection
  created_at: OrderByDirection
  title: OrderByDirection
  body: OrderByDirection
  url: OrderByDirection
  user_id: OrderByDirection
  category_id: OrderByDirection
  reddit_id: OrderByDirection
  reddit_upvotes: OrderByDirection
  reddit_downvotes: OrderByDirection
  postthread_upvotes: OrderByDirection
  postthread_downvotes: OrderByDirection
  is_nsfw: OrderByDirection
  profile_pic: OrderByDirection
}

input postsUpdateInput {
  created_at: Datetime
  title: String
  body: String
  url: String
  user_id: BigInt
  category_id: BigInt
  reddit_id: String
  reddit_upvotes: BigInt
  reddit_downvotes: BigInt
  postthread_upvotes: BigInt
  postthread_downvotes: BigInt
  is_nsfw: Boolean
  profile_pic: String
}

input usersFilter {
  id: BigIntFilter
  created_at: DatetimeFilter
  username: StringFilter
  profile_pic: StringFilter
  msa_id: BigIntFilter
}

input usersInsertInput {
  created_at: Datetime
  username: String
  profile_pic: String
  msa_id: BigInt
}

input usersOrderBy {
  id: OrderByDirection
  created_at: OrderByDirection
  username: OrderByDirection
  profile_pic: OrderByDirection
  msa_id: OrderByDirection
}

input usersUpdateInput {
  created_at: Datetime
  username: String
  profile_pic: String
  msa_id: BigInt
  daily_payout_claimed: Boolean
  reddit_username: String
  discord_username: String
  github_username: String
  email: String
  wallet_address_provided: String
  wallet_address_personal: String
  reddit_airdrop_claimed: String
  tokens_claimed: Boolean
  signature: String
}

input votesFilter {
  id: BigIntFilter
  created_at: DatetimeFilter
  post_id: BigIntFilter
  user_id: BigIntFilter
  up: BooleanFilter
}

input votesInsertInput {
  created_at: Datetime
  post_id: BigInt
  user_id: BigInt
  up: Boolean
}

input votesOrderBy {
  id: OrderByDirection
  created_at: OrderByDirection
  post_id: OrderByDirection
  user_id: OrderByDirection
  up: OrderByDirection
}

input votesUpdateInput {
  created_at: Datetime
  post_id: BigInt
  user_id: BigInt
  up: Boolean
}

"The root type for creating and mutating data"
type Mutation {
  "Deletes zero or more records from the collection"
  deleteFromcategoriesCollection(
    "Restricts the mutation's impact to records matching the critera"
    filter: categoriesFilter
    "The maximum number of records in the collection permitted to be affected"
    atMost: Int! = 1
  ): categoriesDeleteResponse!
    @graphql(
      endpoint: "https://xjebavwoszxwjtyysvlf.supabase.co/graphql/v1?apikey=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InhqZWJhdndvc3p4d2p0eXlzdmxmIiwicm9sZSI6ImFub24iLCJpYXQiOjE2NTk0NjU4MDUsImV4cCI6MTk3NTA0MTgwNX0.jyE9p0alolkuRPWhoqUXFdTiASTqC_7vynTmwwfGl30"
      prefix: { includeRootOperations: true, value: "" }
    )
  "Deletes zero or more records from the collection"
  deleteFromcommentsCollection(
    "Restricts the mutation's impact to records matching the critera"
    filter: commentsFilter
    "The maximum number of records in the collection permitted to be affected"
    atMost: Int! = 1
  ): commentsDeleteResponse!
    @graphql(
      endpoint: "https://xjebavwoszxwjtyysvlf.supabase.co/graphql/v1?apikey=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InhqZWJhdndvc3p4d2p0eXlzdmxmIiwicm9sZSI6ImFub24iLCJpYXQiOjE2NTk0NjU4MDUsImV4cCI6MTk3NTA0MTgwNX0.jyE9p0alolkuRPWhoqUXFdTiASTqC_7vynTmwwfGl30"
      prefix: { includeRootOperations: true, value: "" }
    )
  "Deletes zero or more records from the collection"
  deleteFrompostsCollection(
    "Restricts the mutation's impact to records matching the critera"
    filter: postsFilter
    "The maximum number of records in the collection permitted to be affected"
    atMost: Int! = 1
  ): postsDeleteResponse!
    @graphql(
      endpoint: "https://xjebavwoszxwjtyysvlf.supabase.co/graphql/v1?apikey=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InhqZWJhdndvc3p4d2p0eXlzdmxmIiwicm9sZSI6ImFub24iLCJpYXQiOjE2NTk0NjU4MDUsImV4cCI6MTk3NTA0MTgwNX0.jyE9p0alolkuRPWhoqUXFdTiASTqC_7vynTmwwfGl30"
      prefix: { includeRootOperations: true, value: "" }
    )
  "Deletes zero or more records from the collection"
  deleteFromusersCollection(
    "Restricts the mutation's impact to records matching the critera"
    filter: usersFilter
    "The maximum number of records in the collection permitted to be affected"
    atMost: Int! = 1
  ): usersDeleteResponse!
    @graphql(
      endpoint: "https://xjebavwoszxwjtyysvlf.supabase.co/graphql/v1?apikey=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InhqZWJhdndvc3p4d2p0eXlzdmxmIiwicm9sZSI6ImFub24iLCJpYXQiOjE2NTk0NjU4MDUsImV4cCI6MTk3NTA0MTgwNX0.jyE9p0alolkuRPWhoqUXFdTiASTqC_7vynTmwwfGl30"
      prefix: { includeRootOperations: true, value: "" }
    )
  "Deletes zero or more records from the collection"
  deleteFromvotesCollection(
    "Restricts the mutation's impact to records matching the critera"
    filter: votesFilter
    "The maximum number of records in the collection permitted to be affected"
    atMost: Int! = 1
  ): votesDeleteResponse!
    @graphql(
      endpoint: "https://xjebavwoszxwjtyysvlf.supabase.co/graphql/v1?apikey=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InhqZWJhdndvc3p4d2p0eXlzdmxmIiwicm9sZSI6ImFub24iLCJpYXQiOjE2NTk0NjU4MDUsImV4cCI6MTk3NTA0MTgwNX0.jyE9p0alolkuRPWhoqUXFdTiASTqC_7vynTmwwfGl30"
      prefix: { includeRootOperations: true, value: "" }
    )
  "Adds one or more `categoriesInsertResponse` records to the collection"
  insertIntocategoriesCollection(
    objects: [categoriesInsertInput!]!
  ): categoriesInsertResponse
    @graphql(
      endpoint: "https://xjebavwoszxwjtyysvlf.supabase.co/graphql/v1?apikey=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InhqZWJhdndvc3p4d2p0eXlzdmxmIiwicm9sZSI6ImFub24iLCJpYXQiOjE2NTk0NjU4MDUsImV4cCI6MTk3NTA0MTgwNX0.jyE9p0alolkuRPWhoqUXFdTiASTqC_7vynTmwwfGl30"
      prefix: { includeRootOperations: true, value: "" }
    )
  "Adds one or more `commentsInsertResponse` records to the collection"
  insertIntocommentsCollection(
    objects: [commentsInsertInput!]!
  ): commentsInsertResponse
    @graphql(
      endpoint: "https://xjebavwoszxwjtyysvlf.supabase.co/graphql/v1?apikey=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InhqZWJhdndvc3p4d2p0eXlzdmxmIiwicm9sZSI6ImFub24iLCJpYXQiOjE2NTk0NjU4MDUsImV4cCI6MTk3NTA0MTgwNX0.jyE9p0alolkuRPWhoqUXFdTiASTqC_7vynTmwwfGl30"
      prefix: { includeRootOperations: true, value: "" }
    )
  "Adds one or more `postsInsertResponse` records to the collection"
  insertIntopostsCollection(objects: [postsInsertInput!]!): postsInsertResponse
    @graphql(
      endpoint: "https://xjebavwoszxwjtyysvlf.supabase.co/graphql/v1?apikey=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InhqZWJhdndvc3p4d2p0eXlzdmxmIiwicm9sZSI6ImFub24iLCJpYXQiOjE2NTk0NjU4MDUsImV4cCI6MTk3NTA0MTgwNX0.jyE9p0alolkuRPWhoqUXFdTiASTqC_7vynTmwwfGl30"
      prefix: { includeRootOperations: true, value: "" }
    )
  "Adds one or more `usersInsertResponse` records to the collection"
  insertIntousersCollection(objects: [usersInsertInput!]!): usersInsertResponse
    @graphql(
      endpoint: "https://xjebavwoszxwjtyysvlf.supabase.co/graphql/v1?apikey=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InhqZWJhdndvc3p4d2p0eXlzdmxmIiwicm9sZSI6ImFub24iLCJpYXQiOjE2NTk0NjU4MDUsImV4cCI6MTk3NTA0MTgwNX0.jyE9p0alolkuRPWhoqUXFdTiASTqC_7vynTmwwfGl30"
      prefix: { includeRootOperations: true, value: "" }
    )
  "Adds one or more `votesInsertResponse` records to the collection"
  insertIntovotesCollection(objects: [votesInsertInput!]!): votesInsertResponse
    @graphql(
      endpoint: "https://xjebavwoszxwjtyysvlf.supabase.co/graphql/v1?apikey=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InhqZWJhdndvc3p4d2p0eXlzdmxmIiwicm9sZSI6ImFub24iLCJpYXQiOjE2NTk0NjU4MDUsImV4cCI6MTk3NTA0MTgwNX0.jyE9p0alolkuRPWhoqUXFdTiASTqC_7vynTmwwfGl30"
      prefix: { includeRootOperations: true, value: "" }
    )
  "Updates zero or more records in the collection"
  updatecategoriesCollection(
    "Fields that are set will be updated for all records matching the `filter`"
    set: categoriesUpdateInput!
    "Restricts the mutation's impact to records matching the critera"
    filter: categoriesFilter
    "The maximum number of records in the collection permitted to be affected"
    atMost: Int! = 1
  ): categoriesUpdateResponse!
    @graphql(
      endpoint: "https://xjebavwoszxwjtyysvlf.supabase.co/graphql/v1?apikey=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InhqZWJhdndvc3p4d2p0eXlzdmxmIiwicm9sZSI6ImFub24iLCJpYXQiOjE2NTk0NjU4MDUsImV4cCI6MTk3NTA0MTgwNX0.jyE9p0alolkuRPWhoqUXFdTiASTqC_7vynTmwwfGl30"
      prefix: { includeRootOperations: true, value: "" }
    )
  "Updates zero or more records in the collection"
  updatecommentsCollection(
    "Fields that are set will be updated for all records matching the `filter`"
    set: commentsUpdateInput!
    "Restricts the mutation's impact to records matching the critera"
    filter: commentsFilter
    "The maximum number of records in the collection permitted to be affected"
    atMost: Int! = 1
  ): commentsUpdateResponse!
    @graphql(
      endpoint: "https://xjebavwoszxwjtyysvlf.supabase.co/graphql/v1?apikey=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InhqZWJhdndvc3p4d2p0eXlzdmxmIiwicm9sZSI6ImFub24iLCJpYXQiOjE2NTk0NjU4MDUsImV4cCI6MTk3NTA0MTgwNX0.jyE9p0alolkuRPWhoqUXFdTiASTqC_7vynTmwwfGl30"
      prefix: { includeRootOperations: true, value: "" }
    )
  "Updates zero or more records in the collection"
  updatepostsCollection(
    "Fields that are set will be updated for all records matching the `filter`"
    set: postsUpdateInput!
    "Restricts the mutation's impact to records matching the critera"
    filter: postsFilter
    "The maximum number of records in the collection permitted to be affected"
    atMost: Int! = 1
  ): postsUpdateResponse!
    @graphql(
      endpoint: "https://xjebavwoszxwjtyysvlf.supabase.co/graphql/v1?apikey=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InhqZWJhdndvc3p4d2p0eXlzdmxmIiwicm9sZSI6ImFub24iLCJpYXQiOjE2NTk0NjU4MDUsImV4cCI6MTk3NTA0MTgwNX0.jyE9p0alolkuRPWhoqUXFdTiASTqC_7vynTmwwfGl30"
      prefix: { includeRootOperations: true, value: "" }
    )
  "Updates zero or more records in the collection"
  updateusersCollection(
    "Fields that are set will be updated for all records matching the `filter`"
    set: usersUpdateInput!
    "Restricts the mutation's impact to records matching the critera"
    filter: usersFilter
    "The maximum number of records in the collection permitted to be affected"
    atMost: Int! = 1
  ): usersUpdateResponse!
    @graphql(
      endpoint: "https://xjebavwoszxwjtyysvlf.supabase.co/graphql/v1?apikey=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InhqZWJhdndvc3p4d2p0eXlzdmxmIiwicm9sZSI6ImFub24iLCJpYXQiOjE2NTk0NjU4MDUsImV4cCI6MTk3NTA0MTgwNX0.jyE9p0alolkuRPWhoqUXFdTiASTqC_7vynTmwwfGl30"
      prefix: { includeRootOperations: true, value: "" }
    )
  "Updates zero or more records in the collection"
  updatevotesCollection(
    "Fields that are set will be updated for all records matching the `filter`"
    set: votesUpdateInput!
    "Restricts the mutation's impact to records matching the critera"
    filter: votesFilter
    "The maximum number of records in the collection permitted to be affected"
    atMost: Int! = 1
  ): votesUpdateResponse!
    @graphql(
      endpoint: "https://xjebavwoszxwjtyysvlf.supabase.co/graphql/v1?apikey=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InhqZWJhdndvc3p4d2p0eXlzdmxmIiwicm9sZSI6ImFub24iLCJpYXQiOjE2NTk0NjU4MDUsImV4cCI6MTk3NTA0MTgwNX0.jyE9p0alolkuRPWhoqUXFdTiASTqC_7vynTmwwfGl30"
      prefix: { includeRootOperations: true, value: "" }
    )
}

"The root type for querying data"
type Query {
  "A pagable collection of type `categories`"
  categoriesCollection(
    "Query the first `n` records in the collection"
    first: Int
    "Query the last `n` records in the collection"
    last: Int
    "Query values in the collection before the provided cursor"
    before: Cursor
    "Query values in the collection after the provided cursor"
    after: Cursor
    "Filters to apply to the results set when querying from the collection"
    filter: categoriesFilter
    "Sort order to apply to the collection"
    orderBy: [categoriesOrderBy!]
  ): categoriesConnection
    @graphql(
      endpoint: "https://xjebavwoszxwjtyysvlf.supabase.co/graphql/v1?apikey=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InhqZWJhdndvc3p4d2p0eXlzdmxmIiwicm9sZSI6ImFub24iLCJpYXQiOjE2NTk0NjU4MDUsImV4cCI6MTk3NTA0MTgwNX0.jyE9p0alolkuRPWhoqUXFdTiASTqC_7vynTmwwfGl30"
      prefix: { includeRootOperations: true, value: "" }
    )
  "A pagable collection of type `comments`"
  commentsCollection(
    "Query the first `n` records in the collection"
    first: Int
    "Query the last `n` records in the collection"
    last: Int
    "Query values in the collection before the provided cursor"
    before: Cursor
    "Query values in the collection after the provided cursor"
    after: Cursor
    "Filters to apply to the results set when querying from the collection"
    filter: commentsFilter
    "Sort order to apply to the collection"
    orderBy: [commentsOrderBy!]
  ): commentsConnection
    @graphql(
      endpoint: "https://xjebavwoszxwjtyysvlf.supabase.co/graphql/v1?apikey=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InhqZWJhdndvc3p4d2p0eXlzdmxmIiwicm9sZSI6ImFub24iLCJpYXQiOjE2NTk0NjU4MDUsImV4cCI6MTk3NTA0MTgwNX0.jyE9p0alolkuRPWhoqUXFdTiASTqC_7vynTmwwfGl30"
      prefix: { includeRootOperations: true, value: "" }
    )
  "A pagable collection of type `posts`"
  postsCollection(
    "Query the first `n` records in the collection"
    first: Int
    "Query the last `n` records in the collection"
    last: Int
    "Query values in the collection before the provided cursor"
    before: Cursor
    "Query values in the collection after the provided cursor"
    after: Cursor
    "Filters to apply to the results set when querying from the collection"
    filter: postsFilter
    "Sort order to apply to the collection"
    orderBy: [postsOrderBy!]
  ): postsConnection
    @graphql(
      endpoint: "https://xjebavwoszxwjtyysvlf.supabase.co/graphql/v1?apikey=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InhqZWJhdndvc3p4d2p0eXlzdmxmIiwicm9sZSI6ImFub24iLCJpYXQiOjE2NTk0NjU4MDUsImV4cCI6MTk3NTA0MTgwNX0.jyE9p0alolkuRPWhoqUXFdTiASTqC_7vynTmwwfGl30"
      prefix: { includeRootOperations: true, value: "" }
    )
  "A pagable collection of type `users`"
  usersCollection(
    "Query the first `n` records in the collection"
    first: Int
    "Query the last `n` records in the collection"
    last: Int
    "Query values in the collection before the provided cursor"
    before: Cursor
    "Query values in the collection after the provided cursor"
    after: Cursor
    "Filters to apply to the results set when querying from the collection"
    filter: usersFilter
    "Sort order to apply to the collection"
    orderBy: [usersOrderBy!]
  ): usersConnection
    @graphql(
      endpoint: "https://xjebavwoszxwjtyysvlf.supabase.co/graphql/v1?apikey=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InhqZWJhdndvc3p4d2p0eXlzdmxmIiwicm9sZSI6ImFub24iLCJpYXQiOjE2NTk0NjU4MDUsImV4cCI6MTk3NTA0MTgwNX0.jyE9p0alolkuRPWhoqUXFdTiASTqC_7vynTmwwfGl30"
      prefix: { includeRootOperations: true, value: "" }
    )
  "A pagable collection of type `votes`"
  votesCollection(
    "Query the first `n` records in the collection"
    first: Int
    "Query the last `n` records in the collection"
    last: Int
    "Query values in the collection before the provided cursor"
    before: Cursor
    "Query values in the collection after the provided cursor"
    after: Cursor
    "Filters to apply to the results set when querying from the collection"
    filter: votesFilter
    "Sort order to apply to the collection"
    orderBy: [votesOrderBy!]
  ): votesConnection
    @graphql(
      endpoint: "https://xjebavwoszxwjtyysvlf.supabase.co/graphql/v1?apikey=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InhqZWJhdndvc3p4d2p0eXlzdmxmIiwicm9sZSI6ImFub24iLCJpYXQiOjE2NTk0NjU4MDUsImV4cCI6MTk3NTA0MTgwNX0.jyE9p0alolkuRPWhoqUXFdTiASTqC_7vynTmwwfGl30"
      prefix: { includeRootOperations: true, value: "" }
    )
}

type categories {
  id: BigInt!
  created_at: Datetime
  name: String
  postsCollection(
    "Query the first `n` records in the collection"
    first: Int
    "Query the last `n` records in the collection"
    last: Int
    "Query values in the collection before the provided cursor"
    before: Cursor
    "Query values in the collection after the provided cursor"
    after: Cursor
    "Filters to apply to the results set when querying from the collection"
    filter: postsFilter
    "Sort order to apply to the collection"
    orderBy: [postsOrderBy!]
  ): postsConnection
}

type categoriesConnection {
  edges: [categoriesEdge!]!
  pageInfo: PageInfo!
}

type categoriesDeleteResponse {
  "Count of the records impacted by the mutation"
  affectedCount: Int!
  "Array of records impacted by the mutation"
  records: [categories!]!
}

type categoriesEdge {
  cursor: String!
  node: categories
}

type categoriesInsertResponse {
  "Count of the records impacted by the mutation"
  affectedCount: Int!
  "Array of records impacted by the mutation"
  records: [categories!]!
}

type categoriesUpdateResponse {
  "Count of the records impacted by the mutation"
  affectedCount: Int!
  "Array of records impacted by the mutation"
  records: [categories!]!
}

type comments {
  id: BigInt!
  created_at: Datetime
  post_id: BigInt
  user_id: BigInt
  body: String
  reddit_upvotes: BigInt
  reddit_downvotes: BigInt
  postthread_upvotes: BigInt
  postthread_downvotes: BigInt
  reddit_id: String
  depth: BigInt
}

type commentsConnection {
  edges: [commentsEdge!]!
  pageInfo: PageInfo!
}

type commentsDeleteResponse {
  "Count of the records impacted by the mutation"
  affectedCount: Int!
  "Array of records impacted by the mutation"
  records: [comments!]!
}

type commentsEdge {
  cursor: String!
  node: comments
}

type commentsInsertResponse {
  "Count of the records impacted by the mutation"
  affectedCount: Int!
  "Array of records impacted by the mutation"
  records: [comments!]!
}

type commentsUpdateResponse {
  "Count of the records impacted by the mutation"
  affectedCount: Int!
  "Array of records impacted by the mutation"
  records: [comments!]!
}

type posts {
  id: BigInt!
  created_at: Datetime
  title: String
  body: String
  url: String
  user_id: BigInt
  category_id: BigInt
  reddit_id: String
  reddit_upvotes: BigInt
  reddit_downvotes: BigInt
  postthread_upvotes: BigInt
  postthread_downvotes: BigInt
  is_nsfw: Boolean
  profile_pic: String
  categories: categories
  users: users
  votesCollection(
    "Query the first `n` records in the collection"
    first: Int
    "Query the last `n` records in the collection"
    last: Int
    "Query values in the collection before the provided cursor"
    before: Cursor
    "Query values in the collection after the provided cursor"
    after: Cursor
    "Filters to apply to the results set when querying from the collection"
    filter: votesFilter
    "Sort order to apply to the collection"
    orderBy: [votesOrderBy!]
  ): votesConnection
}

type postsConnection {
  edges: [postsEdge!]!
  pageInfo: PageInfo!
}

type postsDeleteResponse {
  "Count of the records impacted by the mutation"
  affectedCount: Int!
  "Array of records impacted by the mutation"
  records: [posts!]!
}

type postsEdge {
  cursor: String!
  node: posts
}

type postsInsertResponse {
  "Count of the records impacted by the mutation"
  affectedCount: Int!
  "Array of records impacted by the mutation"
  records: [posts!]!
}

type postsUpdateResponse {
  "Count of the records impacted by the mutation"
  affectedCount: Int!
  "Array of records impacted by the mutation"
  records: [posts!]!
}

type users {
  id: BigInt!
  created_at: Datetime
  username: String
  profile_pic: String!
  msa_id: BigInt
  postsCollection(
    "Query the first `n` records in the collection"
    first: Int
    "Query the last `n` records in the collection"
    last: Int
    "Query values in the collection before the provided cursor"
    before: Cursor
    "Query values in the collection after the provided cursor"
    after: Cursor
    "Filters to apply to the results set when querying from the collection"
    filter: postsFilter
    "Sort order to apply to the collection"
    orderBy: [postsOrderBy!]
  ): postsConnection
  votesCollection(
    "Query the first `n` records in the collection"
    first: Int
    "Query the last `n` records in the collection"
    last: Int
    "Query values in the collection before the provided cursor"
    before: Cursor
    "Query values in the collection after the provided cursor"
    after: Cursor
    "Filters to apply to the results set when querying from the collection"
    filter: votesFilter
    "Sort order to apply to the collection"
    orderBy: [votesOrderBy!]
  ): votesConnection
}

type usersConnection {
  edges: [usersEdge!]!
  pageInfo: PageInfo!
}

type usersDeleteResponse {
  "Count of the records impacted by the mutation"
  affectedCount: Int!
  "Array of records impacted by the mutation"
  records: [users!]!
}

type usersEdge {
  cursor: String!
  node: users
}

type usersInsertResponse {
  "Count of the records impacted by the mutation"
  affectedCount: Int!
  "Array of records impacted by the mutation"
  records: [users!]!
}

type usersUpdateResponse {
  "Count of the records impacted by the mutation"
  affectedCount: Int!
  "Array of records impacted by the mutation"
  records: [users!]!
}

type votes {
  id: BigInt!
  created_at: Datetime
  post_id: BigInt
  user_id: BigInt
  up: Boolean
  posts: posts
  users: users
}

type votesConnection {
  edges: [votesEdge!]!
  pageInfo: PageInfo!
}

type votesDeleteResponse {
  "Count of the records impacted by the mutation"
  affectedCount: Int!
  "Array of records impacted by the mutation"
  records: [votes!]!
}

type votesEdge {
  cursor: String!
  node: votes
}

type votesInsertResponse {
  "Count of the records impacted by the mutation"
  affectedCount: Int!
  "Array of records impacted by the mutation"
  records: [votes!]!
}

type votesUpdateResponse {
  "Count of the records impacted by the mutation"
  affectedCount: Int!
  "Array of records impacted by the mutation"
  records: [votes!]!
}
