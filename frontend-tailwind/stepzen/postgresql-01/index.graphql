type Temp {
  created_at: DateTime
  id: ID!
}

type Query {
  getTempList: [Temp]
    @dbquery(
      type: "postgresql"
      schema: "public"
      table: "temp"
      configuration: "postgresql_config"
    )
  """
  This query is an example of how to simply paginate your responses.
  """
  getPaginatedTempList(first: Int!, after: Int!): [Temp]
    @dbquery(
      type: "postgresql"
      query: """
      select * from "public"."temp" limit $1 offset $2
      """
      configuration: "postgresql_config"
    )
  """
  In this example, a single query parameter is passed. If the request to the DB will
  return at most one value you can remove the square brackets from the result.
  """
  getTempById(id: ID!): [Temp]
    @dbquery(
      type: "postgresql"
      query: """
      select * from "public"."temp" where "id" = $1
      """
      configuration: "postgresql_config"
    )
  """
  In this example, two query parameters are passed. If the request to the DB will
  return at most one value you can remove the square brackets from the result.
  """
  getTempByIdAndCreated_at(id: ID!, created_at: DateTime!): [Temp]
    @dbquery(
      type: "postgresql"
      query: """
      select * from "public"."temp" where "id" = $1 and "created_at" = $2
      """
      configuration: "postgresql_config"
    )
}

type Mutation {
  """
  In this mutation example you can see how to do a mutation to insert data in the database.
  """
  insertTemp(created_at: DateTime!): Temp
    @dbquery(
      type: "postgresql"
      schema: "public"
      table: "temp"
      dml: INSERT
      configuration: "postgresql_config"
    )
  """
  In this mutation example you can see how to do a mutation to delete data from the database.
  """
  deleteTemp(id: ID!, created_at: DateTime!): Temp
    @dbquery(
      type: "postgresql"
      schema: "public"
      table: "temp"
      dml: DELETE
      configuration: "postgresql_config"
    )
}
