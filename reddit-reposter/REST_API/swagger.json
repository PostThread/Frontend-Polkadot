{
  "swagger": "2.0",
  "info": {
    "description": "This is a sample server for calling PostThread API",
    "version": "1.0.0",
    "title": "Swagger PostThread",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "apiteam@swagger.io"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "cupochia.ddns.net:5000",
  "basePath": "/",
  "tags": [
    {
      "name": "frontpage",
      "description": "Methods to be used on the frontpage"
    },
    {
      "name": "submitpage",
      "description": "Methods to be used on the submit page (where a post is created)"
    },
    {
      "name": "userpage",
      "description": "Methods to be used on the user's profile page"
    },
    {
      "name": "airdroppage",
      "description": "Methods to be used on the airdrop page"
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/post/{post_hash}": {
      "get": {
        "tags": [
          "frontpage"
        ],
        "summary": "Get a post",
        "description": "Get a post from hash",
        "operationId": "getPostFromHash",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "post_hash",
            "in": "path",
            "description": "IPFS hash of post file",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PostResponse"
              }
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/post": {
      "post": {
        "tags": [
          "posting"
        ],
        "summary": "Create a post",
        "description": "",
        "operationId": "addPost",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Post object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PostInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/posts/{page_number}/{num_posts}": {
      "get": {
        "tags": [
          "frontpage"
        ],
        "summary": "Get posts",
        "description": "You get post from number (page_number - 1) * num_post to page_number * num_post. So will always receive num_post amount. page_number tells how much to shift by.",
        "operationId": "getPosts",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "page_number",
            "default": 1,
            "in": "path",
            "description": "how many num_posts to shift output by",
            "required": true,
            "type": "integer"
          },
          {
            "name": "num_posts",
            "in": "path",
            "default": 10,
            "description": "How many posts to return",
            "required": true,
            "type": "integer"
          },
          {
            "name": "sort_by",
            "default": 1,
            "in": "query",
            "description": "how many num_posts to shift output by",
            "required": false,
            "type": "integer"
          },
          {
            "name": "minutes_filter",
            "in": "query",
            "default": 10,
            "description": "How many posts to return",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PostResponse"
              }
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    }
  },
  "definitions": {
    "PostInput": {
      "type": "object",
      "required": [
        "category",
        "username",
        "profile_pic",
        "title",
        "body",
        "url",
        "is_nsfw"
      ],
      "properties": {
        "category": {
          "type": "string",
          "default": "memes"
        },
        "username": {
          "type": "string",
          "default": "the_doge_father"
        },
        "profile_pic": {
          "type": "string",
          "default": "https://images.news18.com/ibnlive/uploads/2021/02/1612429577_untitled-design-2021-02-04t143411.825.png?impolicy=website&width=510&height=356"
        },
        "title": {
          "type": "string",
          "default": "I am Doge Father"
        },
        "body": {
          "type": "string",
          "default": ""
        },
        "url": {
          "type": "string",
          "default": "https://images.news18.com/ibnlive/uploads/2021/02/1612429577_untitled-design-2021-02-04t143411.825.png?impolicy=website&width=510&height=356"
        },
        "is_nsfw": {
          "type": "boolean",
          "default": true
        },
        "wait_for_inclusion": {
          "type": "boolean",
          "default": false
        },
        "wait_for_finalization": {
          "type": "boolean",
          "default": false
        }
      },
      "xml": {
        "name": "PostInput"
      }
    },
    "PostResponse": {
      "type": "object",
      "required": [
        "category",
        "username",
        "profile_pic",
        "title",
        "body",
        "url",
        "is_nsfw",
        "block_number",
        "msa_id_from_query",
        "signer",
        "date_minted",
        "ipfs_hash",
        "parent_hash",
        "total_votes"
      ],
      "properties": {
        "category": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "profile_pic": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "body": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "is_nsfw": {
          "type": "string"
        },
        "block_number": {
          "type": "integer"
        },
        "msa_id_from_query": {
          "type": "integer"
        },
        "signer": {
          "type": "string"
        },
        "date_minted": {
          "type": "string"
        },
        "ipfs_hash": {
          "type": "string"
        },
        "parent_hash": {
          "type": "string"
        },
        "total_votes": {
          "type": "integer"
        }
      },
      "xml": {
        "name": "PostInput"
      }
    }
  }
}